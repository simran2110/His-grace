LEC 101:
ab hmne pichle lec me yeh kia tha k hmne app.component.ts me provider=[AccountService] dia tha 
and aur kisi bhi usk child components : acccount component ya new account component me nhi dia..
kyunki hm chahte the k vhi same instance AccountService ka use ho account and new account component me jo app component me hua hai 
kyunki usi me array tha accounts ka.agar hm nya create krte toh vo overwrite ho jata .
is liye hmne ek bar app.component.ts me hi provider me [AccountServive] likh dia tha and isne ek nya instance bna dia tha is service ka..
par isse bhi upar ek aur chz hai app.module.ts.. agar mene isk providers me likha hota service toh mko app.componnet.ts me bhi provider na likhna prta..
isliye hm ek yeh change kr lenge k app.module.ts me  provider=[AccountService] likh denge..
and app.component.ts se hta denge..

ab hmne hmara addAccount and updateAccount ka function toh account.service.ts me rkha hai.. phle yeh hora tha k jb account add hota tha toh console.log pe msg likha ata tha..
and yeh msg print krne ka kam logging.service.ts kr ra hai.. toh hm iska object bna k usk logchangestatus() function ko kase call krnge addAccount me.. kyunki vo bhi ek service hai...

hm yehkr skte hain : k ek service k anadr dusri service ko use kr skte hain...
isk liye hme ek toh import krna hai LoggingService ko account.service.ts me..
and dusra hme ek special decirator bnana prta hai @Injector()
kyu bnana prta hai??
kyunki ek service usi chiz (component ya dircetive ya koi dusri service) me ja skti hai agar uska metadata ho..
metadata mtlb decorator ho usme..
services k liye ek decorator hota hai @Injectable..
toh hm likhnge acount.service.ts me :
import { LoggingService }  from './logging.service.ts';
@Injectable()
export class AccountService
{
  constructor(public ac : AccountService)
  {}
  
}

